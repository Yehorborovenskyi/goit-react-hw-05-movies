{"version":3,"file":"static/js/290.d0f1a980.chunk.js","mappings":"oPACA,EAA0B,sBAA1B,EAAyD,qBAAzD,EAA6F,2BAA7F,EAA0I,8BAA1I,EAAuL,2B,SC8CvL,EA1Ca,WACX,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,MAFT,OAERC,EAFQ,OAGdJ,EAAUI,EAASC,SAHL,gDAKdC,QAAQC,MAAR,MALc,yDAAH,qDAQfL,GACD,GAAE,KAGD,4BACE,eAAIM,UAAWC,EAAf,gHACA,eAAID,UAAWC,EAAf,SACGV,EAAOW,KACN,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,aAAcC,EAAzC,EAAyCA,aAAzC,OACE,eAAaP,UAAWC,EAAxB,UACE,UAAC,KAAD,CAAMO,GAAE,kBAAaJ,GAArB,WACE,eAAIJ,UAAWC,EAAf,SAAqCE,KACrC,gBACEM,IAAG,0DAAqDJ,GACxDK,IAAKP,EACLQ,MAAO,OAET,gBAAIX,UAAWC,EAAf,WACE,uBAAIK,KACJ,uBAAIC,WAVDH,EADX,QAoBT,C,6JC7CKQ,EAAW,gCACXC,EAAU,mCAEDlB,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGACyBmB,MAAM,GAAD,OACvBF,EADuB,uCACgBC,EADhB,YAD9B,cACQjB,EADR,yBAISA,EAASmB,QAJlB,kEASO,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACkBH,MAAM,GAAD,OACvBF,EADuB,gCACSC,EADT,kBAC0BI,IAFjD,cACCrB,EADD,yBAKEA,EAASmB,QALX,kEAFP,KATA,WAEepB,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EAiBR,IAAMuB,EAAiB,mCAAG,WAAMC,GAAN,uFACRL,MAAM,GAAD,OACvBF,EADuB,iBACNO,EADM,oBACaN,IAFV,cACzBjB,EADyB,yBAIxBA,EAASmB,QAJe,2CAAH,sDAOjBK,EAAc,mCAAG,WAAMD,GAAN,uFACLL,MAAM,GAAD,OACvBF,EADuB,iBACNO,EADM,4BACqBN,IAFrB,cACtBjB,EADsB,yBAIrBA,EAASmB,QAJY,2CAAH,sDAOdM,EAAiB,mCAAG,WAAMF,GAAN,uFACRL,MAAM,GAAD,OACvBF,EADuB,iBACNO,EADM,4BACqBN,IAFlB,cACzBjB,EADyB,yBAIxBA,EAASmB,QAJe,2CAAH,qD,sBClC9B,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOhC,GAEP,YADA0B,EAAO1B,EAET,CAEI+B,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAOG,KAAKR,EAAOC,EAEvC,CAEe,SAASQ,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMa,EAAGK,MAAMJ,EAAME,GAEzB,SAASb,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOe,GACdpB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASe,EACnE,CAEAhB,OAAMiB,EACR,GACF,CACF,C","sources":["webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/Home.js","services/fetch.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"caption\":\"Home_caption__kah+2\",\"movies\":\"Home_movies__F2dIL\",\"movies__link\":\"Home_movies__link__23TJZ\",\"movies__caption\":\"Home_movies__caption__TchG1\",\"movies__info\":\"Home_movies__info__cdlpC\"};","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport fetchHome from 'services/fetch';\nimport css from './Home.module.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const response = await fetchHome();\n        setMovies(response.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1 className={css.caption}>Популярные фильмы</h1>\n      <ul className={css.movies}>\n        {movies.map(\n          ({ title, id, poster_path, release_date, vote_average }) => (\n            <li key={id} className={css.movies__link}>\n              <Link to={`/movies/${id}`}>\n                <h2 className={css.movies__caption}>{title}</h2>\n                <img\n                  src={`https://image.tmdb.org/t/p/w300_and_h450_bestv2/${poster_path}`}\n                  alt={title}\n                  width={300}\n                ></img>\n                <ul className={css.movies__info}>\n                  <p>{release_date}</p>\n                  <p>{vote_average}</p>\n                </ul>\n              </Link>\n            </li>\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Home;\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'e5bfb55386b809202657051ad29d231c';\n\nasync function fetchHome() {\n  const response = await fetch(\n    `${BASE_URL}trending/movie/week?api_key=${API_KEY}&page=1`\n  );\n  return response.json();\n}\n\nexport default fetchHome;\n\nexport async function fetchSearchMovies(query) {\n  const response = await fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n\n  return response.json();\n}\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport const fetchMovieCast = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.json();\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","movies","setMovies","useEffect","getMovies","fetchHome","response","results","console","error","className","css","map","title","id","poster_path","release_date","vote_average","to","src","alt","width","BASE_URL","API_KEY","fetch","json","fetchSearchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}